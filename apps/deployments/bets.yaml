apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    version: v1
    app: bets
  name: bets

spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: bets
  
  template:
    metadata:
      labels:
        app: bets
        version: v1
        stack: echo
        interface: rest
        language: golang
    spec:
      containers:
        - image: claudioed/bets:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: bets-config
          resources:

          #configurando os limits do pod
            requests:
              memory: "5Mi"
              cpu: "100m"
            limits:
              memory: "10Mi"
              cpu: "200m"

          # Verificar se o container está saudável    
          livenessProbe:
            httpGet:
              # path para verificar a saúde
              path: /health
              # porta que estará ouvindo
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 1
          name: bets
          ports:
            - containerPort: 9999
              name:  http
              protocol: TCP
          
          # Sonda para verificar se o container está pronto para receber tráfego
          readinessProbe:
            httpGet:
              path: /health
              port: 9999
              scheme: HTTP
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kong
                    operator: In
                    values:
                      - kong-worker
                      - kong-worker2        
